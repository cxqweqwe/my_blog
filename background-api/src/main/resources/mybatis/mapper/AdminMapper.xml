<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fang.backgroundapi.admin.mapper.AdminMapper">

    <update id="changeUser">
        UPDATE sys_users SET deleted=#{status}, modified_time=#{modifiedTime} WHERE author_id != '598108905656729600' AND author_id = #{authorId}
    </update>

    <update id="settingCancelAdmin">
        UPDATE sys_users_authority
        SET authority_role = ( SELECT authority_role FROM sys_authority WHERE id = #{admin} ) , modified_time = #{modifiedTime}
        WHERE
            author_id = #{authorId}
    </update>

    <select id="queryUser" resultType="com.fang.backgroundapi.pojo.VO.AdminUser">
        SELECT
            sysu.author_id,
            info.nick_name,
            sysu.deleted,
            sysu.create_time,
            sysa.authority_role, (
                CASE authority_role
                WHEN 'root' THEN
                    '超级管理员'
                WHEN 'admin' THEN
                    '管理员'
                ELSE
                    '会员'
                END
            ) role
        FROM
            sys_users sysu,
            user_info info,
            sys_users_authority sysa
        WHERE
            sysu.author_id = info.author_id
            AND sysu.author_id = sysa.author_id
        LIMIT #{curPage},#{size}
    </select>

    <select id="queryArticle" resultType="AdminArticle">
        SELECT ar.article_id ,ar.title, info.nick_name, ar.deleted
        FROM article ar LEFT JOIN user_info info ON ar.author_id = info.author_id
        LIMIT #{curPage},#{size}
    </select>

    <select id="countArticle" resultType="java.lang.Long">
        SELECT COUNT(DISTINCT article_id) FROM article
    </select>

    <update id="trialArticle">
        UPDATE article SET deleted=#{status}, modified_time=#{modifiedTime} WHERE article_id=#{articleId}
    </update>

    <select id="queryComment" resultType="com.fang.backgroundapi.pojo.VO.AdminComment">
        SELECT
            acom.id id,
            '博客' type,
            CONCAT( #{blogURL}, acom.article_id ) commentObject,
            acom.comment_content content,
            acom.author_id authorId,
            info.nick_name nickName,
            acom.create_time createTime,
            acom.deleted deleted
        FROM
            article_comment acom
            LEFT JOIN user_info info ON acom.author_id = info.author_id
        UNION
        SELECT PORT
            .id id,
            '论贴' type,
            CONCAT( #{forumURL}, PORT.port_id ) commentObject,
            PORT.comment_content content,
            PORT.author_id authorId,
            info.nick_name nickName,
            PORT.create_time createTime,
            PORT.deleted deleted
        FROM
            port_comment
            PORT LEFT JOIN user_info info ON PORT.author_id = info.author_id
        LIMIT #{curPage},#{size}
    </select>

    <select id="countComment" resultType="java.lang.Long">
        SELECT COUNT(DISTINCT id) itemCount FROM article_comment
	    UNION
	    SELECT COUNT(DISTINCT id) itemCount FROM port_comment
    </select>

    <update id="trialArticleComment">
        UPDATE article_comment SET deleted=#{status}, modified_time=#{modifiedTime} WHERE id=#{id}
    </update>

    <update id="trialPortComment">
        UPDATE port_comment SET deleted=#{status}, modified_time=#{modifiedTime} WHERE id=#{id}
    </update>



</mapper>
